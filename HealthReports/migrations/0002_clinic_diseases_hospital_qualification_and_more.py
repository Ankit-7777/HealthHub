# Generated by Django 5.1.4 on 2024-12-26 10:26

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('HealthReports', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=15)),
                ('emergency_ward', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Diseases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=90, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('facilities', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=10)),
                ('emergency_ward', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('awarded_year', models.PositiveIntegerField()),
                ('awarded_month', models.PositiveIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='role',
            name='blocked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='blocked',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('object_id', models.PositiveIntegerField()),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('office', 'Office'), ('other', 'Other')], default='home', max_length=10)),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(max_length=15)),
                ('additional_details', models.TextField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['country', 'state', 'city'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('document', models.FileField(upload_to='documents/')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='images/')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
                ('blocked', models.BooleanField(default=False)),
                ('blood_group', models.CharField(choices=[('A Positive (A+)', 'A Positive (A+)'), ('A Negative (A-)', 'A Negative (A-)'), ('B Positive (B+)', 'B Positive (B+)'), ('B Negative (B-)', 'B Negative (B-)'), ('O Positive (O+)', 'O Positive (O+)'), ('O Negative (O-)', 'O Negative (O-)'), ('AB Positive (AB+)', 'AB Positive (AB+)'), ('AB Negative (AB-)', 'AB Negative (AB-)')], max_length=23)),
                ('emergency_contact_number', models.CharField(max_length=15)),
                ('emergency_contact_name', models.CharField(max_length=15)),
                ('diseases', models.ManyToManyField(blank=True, to='HealthReports.diseases')),
                ('documents', models.ManyToManyField(related_name='patient_documents', to='HealthReports.document')),
                ('images', models.ManyToManyField(related_name='patient_images', to='HealthReports.image')),
                ('user', models.OneToOneField(limit_choices_to={'role__name__iexact': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('blocked', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=10)),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('time', models.TimeField()),
                ('blood_group', models.CharField(choices=[('A Positive (A+)', 'A Positive (A+)'), ('A Negative (A-)', 'A Negative (A-)'), ('B Positive (B+)', 'B Positive (B+)'), ('B Negative (B-)', 'B Negative (B-)'), ('O Positive (O+)', 'O Positive (O+)'), ('O Negative (O-)', 'O Negative (O-)'), ('AB Positive (AB+)', 'AB Positive (AB+)'), ('AB Negative (AB-)', 'AB Negative (AB-)')], max_length=20, null=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='HealthReports.clinic')),
                ('user', models.OneToOneField(limit_choices_to={'role__name__iexact': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
                ('documents', models.ManyToManyField(related_name='doctor_documents', to='HealthReports.document')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='HealthReports.hospital')),
                ('images', models.ManyToManyField(related_name='doctor_images', to='HealthReports.image')),
                ('qualifications', models.ManyToManyField(related_name='doctors', to='HealthReports.qualification')),
                ('specializations', models.ManyToManyField(related_name='doctors', to='HealthReports.specialization')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
